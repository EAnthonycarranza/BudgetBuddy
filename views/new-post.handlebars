<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>New Post - Tech Blog</title>
</head>

<body>
  <header>
    <h1>Tech Blog</h1>
    {{#if logged_in}}
    </a>hello</a>
    <a href="/logout">Logout</a>
    {{else}}
    <a href="/login">Login</a>
    <a href="/signup">Sign Up</a>
    {{/if}}
  </header>
  <main>
    <h2>Create New Post</h2>
    {{#if logged_in}}
    <form id="new-post-form">
      <label for="title">Title:</label>
      <input type="text" id="title" name="title" required>
      <label for="content">Content:</label>
      <textarea id="content" name="content" required></textarea>
      <button type="submit">Create Post</button>
    </form>
    {{/if}}

    <!-- Post preview -->
    <h3>Preview</h3>
    <div id="post-preview">
      <!-- Preview elements -->
      <h2 id="preview-title">No posts to display.</h2>
      <p id="preview-content"></p>
    </div>
  </main>

   <script>
    // JavaScript code to handle the post preview and submission
    const titleInput = document.getElementById("title");
    const contentInput = document.getElementById("content");
    const postTextbox = document.getElementById("post-textbox");
    const previewTitle = document.getElementById("preview-title");
    const previewContent = document.getElementById("preview-content");
    const newPostForm = document.getElementById("new-post-form");

    // Update the post preview whenever the input fields change
    function updatePreview() {
      previewTitle.innerText = titleInput.value;
      previewContent.innerText = contentInput.value;
      postTextbox.value = `Title: ${titleInput.value}\n\nContent: ${contentInput.value}`;
    }

    // Add event listeners to the input fields
    titleInput.addEventListener("input", updatePreview);
    contentInput.addEventListener("input", updatePreview);

    // Handle the form submission
    newPostForm.addEventListener("submit", async (event) => {
      event.preventDefault();

      const formData = new FormData(newPostForm);
      const title = formData.get("title");
      const content = formData.get("content");

      try {
        // Send a POST request to the server to create a new post
        const response = await fetch("/api/posts", {
          method: "POST",
          body: JSON.stringify({ title, content }),
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          // If the post is created successfully, update the preview with the new post
          updatePreview();
          // Clear the form fields after creating the post
          titleInput.value = "";
          contentInput.value = "";
        } else {
          // Handle error response
          console.error("Failed to create post.");
        }
      } catch (error) {
        console.error("Error occurred while creating post:", error);
      }
    });
  </script>
</body>

</html>
